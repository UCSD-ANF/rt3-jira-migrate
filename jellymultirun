#!/opt/csw/bin/perl

use warnings;
use strict;

#use HTTP::Async;
use LWP::UserAgent;
use HTTP::Request;
use Term::ReadKey;
use DirHandle;

my $JIRABASEURL="https://anfweb-dev.ucsd.edu/jira/";
my $JIRAUSER="davis";
my $JIRAPASS;
my $JELLYDIR="/home/davis/src/IGPP/rt3-jira-migrate";

my $CONCURREQ=4; # number of concurrent requests
my $successstr="Jelly script completed successfully";

# MAIN

$JIRAPASS=getJiraPasswd();
my @jellyfiles=getjellyfilenames($JELLYDIR);
my $ua=LWP::UserAgent->new();
my $response;

# run each request
foreach my $fn (@jellyfiles) {
   my $url=$JIRABASEURL .  "secure/admin/util/JellyRunner.jspa?os_username=" . $JIRAUSER . "&os_password=" . $JIRAPASS . "&filename=" . $fn . "&script=&Run+now=Run+now";
  my @fields=(
    os_username => $JIRAUSER,
    os_password => $JIRAPASS,
    filename => $fn,
    script => '',
    'Run+now' => 'Run+now'
  );
  print STDERR "-------Requesting jelly processing for file $fn\n";
  #$response=$ua->get($JIRABASEURL."secure/admin/util/JellyRunner.jspa", @fields);
  $response=$ua->get($url);
  if ($response->is_success) {
    my $content=$response->decoded_content;
    #print $response->decoded_content;
    if ($content =~ /Jelly script completed successfully/) {
      print STDERR "Jelly Processing completed successfully.\n";
    }
    else {
      print STDERR "ERROR: An error occurred during processing. See logs.\n";
    }
  }
  else {
    die $response->status_line;
  }
}


#######################

# Get password
sub getJiraPasswd {
  my $password;
  print "Please enter password for user $JIRAUSER at $JIRABASEURL\n> ";
  ReadMode('noecho');
  $password = ReadLine(0);
  chomp $password;
  ReadMode('restore');
  print "\n";
  return $password;
}

# get list of all filenames in JELLYDIR ending in .jelly, sorted
sub getjellyfilenames {
  my $dir=shift;
  my $dh=DirHandle->new($dir) or die "can't opendir $dir: $!";
  return sort           # sort pathnames
  grep { -f }           # choose only "plain" files
  map { "$dir/$_" }     # Create full paths
  grep { /\.jelly$/ }   # choose only files ending in ".jelly"
  $dh->read();          # read all entries
}
